---
- name: "format mount disk"
  hosts: all
  vars:
    type: disk
    disk: sdb
    dir: /data
  tasks:
    - name: set disk variable
      when: type == "disk"
      set_fact:
        partation: "{{ disk }}1"
    - name: set nvme variable
      when: type == "nvme"
      set_fact:
        partation: "{{ disk }}p1"
    - stat:
        path: "/dev/{{ partation }}"
      register: disk_stat
      tags: fdisk
    - name: "create/dev/{{ disk }}Partition"
      when: not disk_stat.stat.exists
      parted:
        device: "/dev/{{ disk }}"
        number: 1
        part_type: primary
        part_start: 0%
        part_end: 100%
        label: gpt
        state: present
      tags: fdisk
    - name: "disk"
      debug:
        msg: "The disk partition to be formatted is/dev/{{ partation }}"
      tags: fdisk
    - name: "format/dev/{{ partation }}Partition"
      when: not disk_stat.stat.exists
      filesystem:
        dev: "/dev/{{ partation }}"
        force: yes
        fstype: xfs
      tags: fdisk
    - name: Reacquire facter
      setup:
        gather_subset:
          - '!all'
          - '!any'
          - hardware
      tags: fdisk
    - name: Obtain/dev/{{ partation }}ofUUID
      set_fact:
        device_uuid: "{{ item.value }}"
      with_dict:
        - "{{ ansible_device_links.uuids }}"
      when: item.key == (partation)
      tags: fdisk
    - name: "mount/dev/{{ partation }}partition to{{ dir }}Table of contents"
      mount:
        path: "{{ dir }}"
        src: "UUID={{device_uuid[0]}}"
        fstype: xfs
        opts: defaults,noatime,nodiratime,pquota
        state: mounted
      tags: fdisk
    - name: "create etcd table of contents"
      file:
        path: "{{ item.line }}"
        owner: root
        group: root
        mode: 0755
        state: directory
      with_items:
        - {line: "{{ dir }}/containers/etcd"}
        - {line: "/var/lib/etcd"}
      when: inventory_hostname in groups['etcd']
      tags: bind_dir
    - name: "to bind etcd data directory to{{ dir }}Table of contents"
      mount:
        path: "/var/lib/etcd"
        src: "{{ dir }}/containers/etcd"
        fstype: none
        opts: defaults,bind
        state: mounted
      when: inventory_hostname in groups['etcd']
      tags: bind_dir
    - name: "create worker table of contents"
      file:
        path: "{{ item.line }}"
        owner: root
        group: root
        mode: 0755
        state: directory
      with_items:
        - {line: "{{ dir }}/containers/kubelet"}
        - {line: "{{ dir }}/containers/containerd"}
        - {line: "{{ dir }}/containers/log"}
        - {line: "/var/lib/kubelet"}
        - {line: "/var/lib/containerd"}
        - {line: "/var/log/pods"}
      when: (inventory_hostname in groups['master'] or inventory_hostname in groups['worker'])
      tags: bind_dir
    - name: "to bind worker data directory to{{ dir }}Table of contents"
      mount:
        path: "{{ item.path }}"
        src: "{{ item.src }}"
        fstype: none
        opts: defaults,bind
        state: mounted
      with_items:
        - {src: "{{ dir }}/containers/kubelet", path: "/var/lib/kubelet"}
        - {src: "{{ dir }}/containers/containerd", path: "/var/lib/containerd"}
        - {src: "{{ dir }}/containers/log", path: "/var/log/pods"}
      when: (inventory_hostname in groups['master'] or inventory_hostname in groups['worker'])
      tags: bind_dir
