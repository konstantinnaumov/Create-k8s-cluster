# Kubernetes Cert
cert:
  dir: /opt/certs
  size: 2048
  day: 3650d

# Etcd
etcd:
  download_url: https://ghproxy.com/https://github.com/etcd-io/etcd/releases/download
  # etcd 
  version: v3.5.6
  data_dir: "/var/lib/etcd"

# High Availability
loadbalance:
  ip: 172.16.90.100
  port: 6443
  #domain_name: apiserver.mafic.com

# Kubernetes
kubernetes:
  download_url: https://kubernetes.oss-cn-hangzhou.aliyuncs.com/kubernetes-release/release
  # kubernetes 
  version: v1.26.0
  # Pod
  podSubnet: 10.64.0.0/12
  # Service
  serviceSubnet: 192.168.0.0/16
  # kubelet 
  kubelet_dir: "/var/lib/kubelet"

# container runtime
runc:
  # runc 
  download_url: https://ghproxy.com/https://github.com/opencontainers/runc/releases/download
  # runc 
  version: v1.1.4

cniplugins:
  # cni-plugins
  download_url: https://ghproxy.com/https://github.com/containernetworking/plugins/releases/download
  # cni-plugins 
  version: v1.1.1

critools:
  # cri-tools 
  download_url: https://ghproxy.com/https://github.com/kubernetes-sigs/cri-tools/releases/download
  # cri-tools 
  version: v1.25.0

# Use cri-containerd-cni, Contains cni-plugins: https://github.com/containernetworking/plugins
containerd:
  # containerd 
  download_url: https://ghproxy.com/https://github.com/containerd/containerd/releases/download
  # containerd 
  version: 1.6.12
  # containerd 
  root: "/var/lib/containerd"
  # containerd 
  state: "/run/containerd"
  # containerd oom_score
  oom_score: -999
  grpc:
    max_recv_message_size: 16777216
    max_send_message_size: 16777216
  debug:
    level: ""
  metrics:
    address: ""
    grpc_histogram: false
  cri:
    sandbox_image: "registry.aliyuncs.com/google_containers/pause:3.7"
    max_container_log_line_size: -1
  containerd:
    snapshotter: overlayfs
  options:
    SystemdCgroup: true
  registries:
    "docker.io": "https://registry-1.docker.io"
    "k8s.gcr.io": "https://k8s-gcr-io.mirrors.sjtug.sjtu.edu.cn"

# Network Plugin
network_plugin: calico
# cilium need linux kernel >= 4.9.17
cilium:
  version: v1.12.4
  # {{cilium.registry}}/operator-generic:{{cilium.version}}
  # {{cilium.registry}}/cilium:{{cilium.version}}
  registry: dockerproxy.com/cilium
  # "disabled" or "vxlan" or "geneve"
  network_mode: vxlan
flannel:
  version: v0.20.2
  # {{flannel.registry}}/flannel-cni-plugin:v1.0.1
  # {{flannel.registry}}/flannel:{{flannel.version}}
  registry: dockerproxy.com/flannelcni
  # "vxlan" or "host-gw"
  network_mode: vxlan
calico:
  version: v3.24.5
  # {{calico.registry}}/kube-controllers:{{calico.version}}
  # {{calico.registry}}/node:{{calico.version}}
  # {{calico.registry}}/cni:{{calico.version}}
  registry: dockerproxy.com/calico
  # "ipip" or "bgp" or "mix"
  network_mode: ipip
  # mtu 
  mtu: 0
  ip_autodetection_method: interface=eth0

# Addons
helm:
  enabled: true
  download_url: https://mirrors.huaweicloud.com/helm
  version: v3.9.4
coredns:
  version: 1.9.3
  # {{coredns.registry}}/coredns:{{coredns.version}}
  registry: dockerproxy.com/coredns
nodelocaldns:
  enabled: true
  version: 1.22.13
  # {{nodelocaldns.registry}}/k8s-dns-node-cache:{{nodelocaldns.version}}
  registry: k8s.dockerproxy.com/dns
  ip: 169.254.20.10
metrics_server:
  enabled: true
  version: v0.6.2
  # {{metrics_server.registry}}/metrics-server:{{metrics_server.version}}
  registry: k8s.dockerproxy.com/metrics-server
nvidia_device_plugin:
  enabled: false
  version: v0.13.0
  # {{nvidia_device_plugin.registry}}/k8s-device-plugin:{{nvidia_device_plugin.version}}
  registry: nvcr.io/nvidia
